let s:V = vital#of('vital')
let s:Path = s:V.import('System.Filepath')
let s:Guard = s:V.import('Vim.Guard')
let s:ScriptLocal = s:V.import('Vim.ScriptLocal')
let s:file = s:Path.realpath('autoload/gita.vim')

Describe gita
  Describe #vital()
    It returns a Vital instance
      let instance = gita#vital()
      Assert KeyExists(instance, 'import')
    End
  End

  Describe #throw({msg})
    It throw an exception with a prefix
      Throws /^vim-gita: foo$/ gita#throw('foo')
    End
  End

  Describe #execute({git}, {name}[, {options}, {config})
    It executes a {name} git command
      let result = gita#execute_old(gita#core#get(), 'rev-parse', {
            \ 'is-inside-work-tree': 1,
            \})
      Assert Equals(result.status, 0)
      Assert Equals(result.stdout, "true\n")
      Assert Equals(result.content, ['true'])
    End
  End
End
