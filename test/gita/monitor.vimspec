Describe gita#monitor
  After
    call WipeoutAll()
  End

  Context #open({bufname}[, {options}, {config}])
    It should open a buffer with {bufname}
      call gita#monitor#open('foo')
      Assert Equals(bufname('%'), 'foo')
    End

    It should properly prepare a monitor buffer
      call gita#monitor#open('foo')
      " local settings
      Assert Equals(&l:buftype, 'nofile')
      Assert Equals(&l:bufhidden, 'hide')
      Assert Equals(&l:buflisted, 0)
      Assert Equals(&l:winfixwidth, 1)
      Assert Equals(&l:winfixheight, 1)
      " window/buffer variables
      Assert True(has_key(w:, '_gita'))
      Assert True(has_key(w:, '_gita_options'))
      Assert True(has_key(w:, '_gita_statuses_map'))
      Assert True(has_key(b:, '_gita_constructed'))
      " autocmd
      Assert True(exists('#vim-gita-monitor'))
      Assert True(exists('#vim-gita-monitor#QuitPre'))
      Assert True(exists('#vim-gita-monitor#WinLeave'))
    End

    It should return a dictionary
      let ret1 = gita#monitor#open('foo')
      let ret2 = gita#monitor#open('foo')

      Assert Equals(ret1.status, 0)
      Assert Equals(ret1.constructed, 0)
      Assert Equals(ret1.loaded, 1)
      Assert Equals(ret1.bufnum, bufnr('%'))

      Assert Equals(ret2.status, 0)
      Assert Equals(ret2.constructed, 1)
      Assert Equals(ret2.loaded, 0)
      Assert Equals(ret2.bufnum, bufnr('%'))
    End
  End

  Context #define_mappings()
    It should define <Plug> mappings
      call gita#monitor#define_mappings()
      Assert NotEmpty(mapcheck('<Plug>(gita-action-quit)'))
      Assert NotEmpty(mapcheck('<Plug>(gita-action-help-s)'))
      Assert NotEmpty(mapcheck('<Plug>(gita-action-edit)'))
      Assert NotEmpty(mapcheck('<Plug>(gita-action-edit-h)'))
      Assert NotEmpty(mapcheck('<Plug>(gita-action-edit-v)'))
      Assert NotEmpty(mapcheck('<Plug>(gita-action-open)'))
      Assert NotEmpty(mapcheck('<Plug>(gita-action-open-h)'))
      Assert NotEmpty(mapcheck('<Plug>(gita-action-open-v)'))
      Assert NotEmpty(mapcheck('<Plug>(gita-action-diff)'))
      Assert NotEmpty(mapcheck('<Plug>(gita-action-diff-h)'))
      Assert NotEmpty(mapcheck('<Plug>(gita-action-diff-v)'))
      Assert NotEmpty(mapcheck('<Plug>(gita-action-DIFF-h)'))
      Assert NotEmpty(mapcheck('<Plug>(gita-action-DIFF-v)'))
    End
  End

  Context #define_default_mappings()
    It should define actual mappings
      call gita#monitor#define_default_mappings()
      " TODO Write mapping tests
    End
  End
End
